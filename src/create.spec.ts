import test from 'ava'

import * as colormap from 'colormap'

import { create } from './create'

test('match colormap output', t => {
  const winter = colormap({ colormap: 'winter', nshades: 72, format: 'rgba', alpha: [0, 1] })
  const actual = create([0, 0, 255], [0, 255, 128], 72, [0, 1])
  t.deepEqual(actual, winter)
})

test('match actual colors', t => {
  let actual = create([150, 0, 90], [0, 0, 200], 72, [0, 1])
  t.deepEqual(actual, [[150, 0, 90, 0], [148, 0, 92, 0.014084507042253521], [146, 0, 93, 0.028169014084507043], [144, 0, 95, 0.04225352112676056], [142, 0, 96, 0.056338028169014086], [139, 0, 98, 0.07042253521126761], [137, 0, 99, 0.08450704225352113], [135, 0, 101, 0.09859154929577466], [133, 0, 102, 0.11267605633802817], [131, 0, 104, 0.1267605633802817], [129, 0, 105, 0.14084507042253522], [127, 0, 107, 0.15492957746478875], [125, 0, 109, 0.16901408450704225], [123, 0, 110, 0.18309859154929578], [120, 0, 112, 0.1971830985915493], [118, 0, 113, 0.2112676056338028], [116, 0, 115, 0.22535211267605634], [114, 0, 116, 0.23943661971830987], [112, 0, 118, 0.2535211267605634], [110, 0, 119, 0.26760563380281693], [108, 0, 121, 0.28169014084507044], [106, 0, 123, 0.29577464788732394], [104, 0, 124, 0.3098591549295775], [101, 0, 126, 0.323943661971831], [99, 0, 127, 0.3380281690140845], [97, 0, 129, 0.35211267605633806], [95, 0, 130, 0.36619718309859156], [93, 0, 132, 0.38028169014084506], [91, 0, 133, 0.3943661971830986], [89, 0, 135, 0.4084507042253521], [87, 0, 136, 0.4225352112676056], [85, 0, 138, 0.4366197183098592], [82, 0, 140, 0.4507042253521127], [80, 0, 141, 0.4647887323943662], [78, 0, 143, 0.47887323943661975], [76, 0, 144, 0.49295774647887325], [74, 0, 146, 0.5070422535211268], [72, 0, 147, 0.5211267605633803], [70, 0, 149, 0.5352112676056339], [68, 0, 150, 0.5492957746478874], [65, 0, 152, 0.5633802816901409], [63, 0, 154, 0.5774647887323944], [61, 0, 155, 0.5915492957746479], [59, 0, 157, 0.6056338028169014], [57, 0, 158, 0.619718309859155], [55, 0, 160, 0.6338028169014085], [53, 0, 161, 0.647887323943662], [51, 0, 163, 0.6619718309859155], [49, 0, 164, 0.676056338028169], [46, 0, 166, 0.6901408450704225], [44, 0, 167, 0.7042253521126761], [42, 0, 169, 0.7183098591549296], [40, 0, 171, 0.7323943661971831], [38, 0, 172, 0.7464788732394366], [36, 0, 174, 0.7605633802816901], [34, 0, 175, 0.7746478873239436], [32, 0, 177, 0.7887323943661972], [30, 0, 178, 0.8028169014084507], [27, 0, 180, 0.8169014084507042], [25, 0, 181, 0.8309859154929577], [23, 0, 183, 0.8450704225352113], [21, 0, 185, 0.8591549295774648], [19, 0, 186, 0.8732394366197184], [17, 0, 188, 0.8873239436619719], [15, 0, 189, 0.9014084507042254], [13, 0, 191, 0.9154929577464789], [11, 0, 192, 0.9295774647887324], [8, 0, 194, 0.943661971830986], [6, 0, 195, 0.9577464788732395], [4, 0, 197, 0.971830985915493], [2, 0, 198, 0.9859154929577465], [0, 0, 200, 1]])
  actual = create([150, 0, 90], [0, 0, 200], 72)
  t.deepEqual(actual, [[150, 0, 90], [148, 0, 92], [146, 0, 93], [144, 0, 95], [142, 0, 96], [139, 0, 98], [137, 0, 99], [135, 0, 101], [133, 0, 102], [131, 0, 104], [129, 0, 105], [127, 0, 107], [125, 0, 109], [123, 0, 110], [120, 0, 112], [118, 0, 113], [116, 0, 115], [114, 0, 116], [112, 0, 118], [110, 0, 119], [108, 0, 121], [106, 0, 123], [104, 0, 124], [101, 0, 126], [99, 0, 127], [97, 0, 129], [95, 0, 130], [93, 0, 132], [91, 0, 133], [89, 0, 135], [87, 0, 136], [85, 0, 138], [82, 0, 140], [80, 0, 141], [78, 0, 143], [76, 0, 144], [74, 0, 146], [72, 0, 147], [70, 0, 149], [68, 0, 150], [65, 0, 152], [63, 0, 154], [61, 0, 155], [59, 0, 157], [57, 0, 158], [55, 0, 160], [53, 0, 161], [51, 0, 163], [49, 0, 164], [46, 0, 166], [44, 0, 167], [42, 0, 169], [40, 0, 171], [38, 0, 172], [36, 0, 174], [34, 0, 175], [32, 0, 177], [30, 0, 178], [27, 0, 180], [25, 0, 181], [23, 0, 183], [21, 0, 185], [19, 0, 186], [17, 0, 188], [15, 0, 189], [13, 0, 191], [11, 0, 192], [8, 0, 194], [6, 0, 195], [4, 0, 197], [2, 0, 198], [0, 0, 200]])
})
